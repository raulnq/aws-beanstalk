Resources:
  NetworkLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Scheme: internal
      Type: network
      SubnetMappings: 
        - PrivateIPv4Address:
            Fn::GetOptionSetting:
              Namespace: 'aws:elasticbeanstalk:customoption'
              OptionName: 'NELBIPSubnetA'
              DefaultValue: '0.0.0.0'
          SubnetId:
            Fn::GetOptionSetting:
              Namespace: 'aws:elasticbeanstalk:customoption'
              OptionName: 'NELBbSubnetA'
              DefaultValue: 'abc'
  NetworkAWSEBV2LoadBalancerTargetGroup:
    Properties:
      HealthCheckIntervalSeconds: 15
      VpcId:
        Fn::GetOptionSetting: 
          Namespace: 'aws:ec2:vpc'
          OptionName: 'VPCId'
          DefaultValue: 'abc'
      HealthyThresholdCount: 3
      HealthCheckPath: 
        Fn::GetOptionSetting:
          Namespace: 'aws:elasticbeanstalk:environment:process:default'
          OptionName: 'HealthCheckPath'
          DefaultValue: 'abc'
      Port: 80
      Protocol: TCP
      UnhealthyThresholdCount: 5
      HealthCheckTimeoutSeconds: 5
      Targets:
        - Id:  { "Ref" : "AWSEBV2LoadBalancer" }
          Port: 80
      TargetType: 'alb'
    Type: 'AWS::ElasticLoadBalancingV2::TargetGroup'
  NetworkAWSEBV2LoadBalancerTargetGroup443:
    Properties:
      HealthCheckIntervalSeconds: 15
      VpcId:
        Fn::GetOptionSetting: 
          Namespace: 'aws:ec2:vpc'
          OptionName: 'VPCId'
          DefaultValue: 'abc'
      HealthyThresholdCount: 3
      HealthCheckProtocol: HTTPS
      HealthCheckPath:
        Fn::GetOptionSetting:
          Namespace: 'aws:elasticbeanstalk:environment:process:default'
          OptionName: 'HealthCheckPath'
          DefaultValue: 'abc'
      Port: 443
      Protocol: TCP
      UnhealthyThresholdCount: 5
      HealthCheckTimeoutSeconds: 5
      Targets:
        - Id:  { "Ref" : "AWSEBV2LoadBalancer" }
          Port: 443
      TargetType: 'alb'
    Type: 'AWS::ElasticLoadBalancingV2::TargetGroup'
  NetworkAWSEBV2LoadBalancerListener:
    Properties:
      LoadBalancerArn: { "Ref" : "NetworkLoadBalancer" }
      DefaultActions:
        - TargetGroupArn: { "Ref" : "NetworkAWSEBV2LoadBalancerTargetGroup" }
          Type: forward
      Port: 80
      Protocol: TCP
    Type: 'AWS::ElasticLoadBalancingV2::Listener'
  NetworkAWSEBV2LoadBalancerListener443:
    Properties:
      LoadBalancerArn: { "Ref" : "NetworkLoadBalancer" }
      DefaultActions:
        - TargetGroupArn: { "Ref" : "NetworkAWSEBV2LoadBalancerTargetGroup443" }
          Type: forward
      Port: 443
      Protocol: TCP
    Type: 'AWS::ElasticLoadBalancingV2::Listener'